Model:
    'architecture' ':'
        elements*=Element
;

Element:
    Component | Connector | Network
;

Component:
    LoadBalancer | StandardComponent | Database | ApiGateway | Queue
;

StandardComponent:
    'component' type=StandardComponentType name=ID
;

LoadBalancer:
    'component' 'loadbalancer' name=ID instanceCount=INT target=[Component]
;

StandardComponentType:
    'frontend' | 'backend' | 'source'
;

Database:
    'component' 'db' name=ID databaseType=DatabaseType
;

DatabaseType:
    'postgresql' | 'mongodb' | 'elasticsearch'
;

ApiGateway:
    'component' 'api_gateway' name=ID auth=Component
;

Queue:
    'component' 'queue' name=ID ('replicationFactor' '=' replicationFactor=INT)?
;

Connector:
    'connector' type=ConnectorType from=[Component] '->' to=[Component]
;

ConnectorType:
    'http' | 'db_connector' | KafkaConnectorConfig
;

KafkaConnectorConfig:
    'kafka_connector' 'topic' '=' topicName=ID 'group_id' '=' groupId=ID
;

Network:
    'network' networkName=ID
;

